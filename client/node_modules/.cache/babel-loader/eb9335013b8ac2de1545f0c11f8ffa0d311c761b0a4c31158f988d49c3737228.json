{"ast":null,"code":"// import React, { useState } from \"react\";\n// import \"./UserDashboard.css\";\n\n// function UsuarioDashboard() {\n//   const [showModal, setShowModal] = useState(null);\n//   const [modalContent, setModalContent] = useState(\"\");\n//   const [nuevoNombreUsuario, setNuevoNombreUsuario] = useState(\"\");\n//   const [nombreUsuario, setNombreUsuario] = useState(\"\");\n//   const [dni, setDni] = useState(\"\");\n//   const [nuevaContrasena, setNuevaContrasena] = useState(\"\");\n//   const [idReclamo, setIdReclamo] = useState(\"\");\n//   const [codigoEdificio, setCodigoEdificio] = useState(\"\");\n//   const [piso, setPiso] = useState(\"\");\n//   const [numero, setNumero] = useState(\"\");\n//   const [idUnidad, setIdUnidad] = useState(\"\");\n//   const [idTipoReclamo, setIdTipoReclamo] = useState(\"\");\n//   const [estado, setEstado] = useState(\"\");\n//   const [numeroUnidad, setNumeroUnidad] = useState(\"\");\n//   const [ubicacion, setUbicacion] = useState(\"\");\n//   const [descripcion, setDescripcion] = useState(\"\");\n//   const [tipoReclamo, setTipoReclamo] = useState(\"\");\n//   const [archivo, setArchivo] = useState(null);\n//   const [tipo, setTipo] = useState(\"\"); \n//   const [idImagen, setIdImagen] = useState(\"\"); \n\n//   const jwtToken = localStorage.getItem(\"jwtToken\");\n\n//   const handleApiCall = async (url, options) => {\n//     try {\n//       const response = await fetch(url, options);\n//       const data = await response.json();\n//       if (!response.ok) {\n//         throw new Error(data.message || 'Error desconocido');\n//       }\n//       return data;\n//     } catch (error) {\n//       console.error('Error en la solicitud:', error);\n//       alert(`Error: ${error.message}`);\n//       return null;\n//     }\n//   };\n// /*METODOS USUARIOS*/\n//   const actualizarNombreUsuario = async () => {\n//     const url = \"http://localhost:8080/api/usuario/actualizar-nombre-usuario\";\n//     const options = {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//       body: JSON.stringify({ nuevoNombreUsuario }),\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       alert(\"Nombre de usuario actualizado con éxito. Por favor, vuelve a iniciar sesión.\");\n//       cerrarSesion();\n//     }\n//   };\n\n//   const restablecerContrasena = async () => {\n//     const url = \"http://localhost:8080/api/usuario/restablecerContrasena\";\n//     const options = {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\n//         nombreUsuario,\n//         dni,\n//         nuevaContrasena,\n//       }),\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       alert(\"Contraseña restablecida correctamente. Por favor, vuelve a iniciar sesión.\");\n//       cerrarSesion();\n//     }\n//   };\n\n//   const cerrarSesion = () => {\n//     localStorage.removeItem(\"jwtToken\");\n//     alert(\"Sesión cerrada. Redirigiendo a la página de inicio.\");\n//     window.location.href = \"http://localhost:3000/\";\n//   };\n\n//   /*METODOS RECLAMOS*/\n//   const mostrarReclamo = async (url) => {\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formattedResult = Array.isArray(result) ? result.map((reclamo, index) => {\n//         const unidadInfo = reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : 'N/A';\n//         return `Reclamo ${index + 1}:\n//           - ID Reclamo: ${reclamo.numero}\n//           - Documento de Reclamante: ${reclamo.usuario ? reclamo.usuario.documento : 'No disponible'}\n//           - Código de Edificio: ${reclamo.edificio ? reclamo.edificio.codigo : 'N/A'}\n//           - Ubicación: ${reclamo.ubicacion}\n//           - Identificador de Unidad: ${unidadInfo}\n//           - Descripción: ${reclamo.descripcion}\n//           - Estado: ${reclamo.estado}\n//           - Detalle Estado: ${reclamo.detalleEstado}\n//           - Fecha: ${reclamo.fecha}\\n`;\n//       }).join(\"\\n\") : \"No se encontraron reclamos.\";\n//       setModalContent(formattedResult);\n//       setShowModal(\"verMisReclamos\");\n//     }\n//   };\n\n//   const obtenerReclamoPorId = async () => {\n//     const url = `http://localhost:8080/api/reclamos/${idReclamo}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = formatReclamo(result);\n//       setModalContent(formatted);\n//       setShowModal(\"verMisReclamos\");\n//     }\n//   };\n\n//   const obtenerReclamosPorEdificio = async () => {\n//     const url = `http://localhost:8080/api/reclamos/edificio/${codigoEdificio}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map(reclamo => formatReclamo(reclamo)).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verMisReclamos\");\n//     }\n//   };\n\n//   const obtenerReclamosPorUnidad = async () => {\n//     const url = `http://localhost:8080/api/reclamos/unidad/${codigoEdificio}/${piso}/${numero}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map(reclamo => formatReclamo(reclamo)).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verMisReclamos\");\n//     }\n//   };\n\n//   const obtenerReclamosPorIdUnidad = async () => {\n//     const url = `http://localhost:8080/api/reclamos/unidad/${idUnidad}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map((reclamo, index) => {\n//         const unidadInfo = reclamo.unidad\n//           ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}, ID: ${reclamo.unidad.id}`\n//           : \"N/A\";\n\n//         return `Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Identificador de Unidad: ${unidadInfo}\n//         - Descripción: ${reclamo.descripcion}\n//         - Estado: ${reclamo.estado}\n//         - Fecha: ${reclamo.fecha}`;\n//       }).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verReclamosPorIdUnidad\");\n//     }\n//   };\n\n//   const obtenerReclamosPorTipo = async () => {\n//     const url = `http://localhost:8080/api/reclamos/tipo/${idTipoReclamo}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map((reclamo, index) => {\n//         const unidadInfo = reclamo.unidad\n//           ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}, ID: ${reclamo.unidad.id}`\n//           : \"N/A\";\n\n//         return `Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Tipo de Reclamo: ${idTipoReclamo}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Identificador de Unidad: ${unidadInfo}\n//         - Descripción: ${reclamo.descripcion}\n//         - Estado: ${reclamo.estado}\n//         - Fecha: ${reclamo.fecha}`;\n//       }).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verReclamosPorTipo\");\n//     }\n//   };\n\n//   const obtenerReclamosPorEstado = async () => {\n//     const url = `http://localhost:8080/api/reclamos/estado/${estado}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map((reclamo, index) => {\n//         const unidadInfo = reclamo.unidad\n//           ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}, ID: ${reclamo.unidad.id}`\n//           : \"N/A\";\n\n//         return `Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Estado: ${estado}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Identificador de Unidad: ${unidadInfo}\n//         - Descripción: ${reclamo.descripcion}\n//         - Fecha: ${reclamo.fecha}`;\n//       }).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verReclamosPorEstado\");\n//     }\n//   };\n\n//   const obtenerReclamosEnAreasComunes = async () => {\n//     const url = \"http://localhost:8080/api/reclamos/areas-comunes\";\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map((reclamo, index) => `\n//         Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Identificador de Unidad: ${\n//           reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : \"N/A\"\n//         }\n//         - Descripción: ${reclamo.descripcion}\n//         - Estado: ${reclamo.estado}\n//         - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verReclamosEnAreasComunes\");\n//     }\n//   };\n\n//   const filtrarReclamosPorFecha = async (masRecientes) => {\n//     const url = `http://localhost:8080/api/reclamos/mis-reclamos/filtrar?masRecientes=${masRecientes}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`, // Asegúrate de que jwtToken sea válido\n//       },\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       if (!response.ok) {\n//         const errorText = await response.text(); // Captura posibles errores del servidor\n//         console.error(\"Error del servidor:\", errorText);\n//         throw new Error(`HTTP ${response.status}`);\n//       }\n\n//       const result = await response.json();\n//       const formatted = result.map((reclamo, index) => `\n//         Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Descripción: ${reclamo.descripcion}\n//         - Estado: ${reclamo.estado}\n//         - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n\n//       setModalContent(formatted);\n//       setShowModal(\"verMisReclamos\");\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error.message);\n//       alert(\"No se pudo cargar los reclamos. Por favor, verifica tus credenciales o intenta nuevamente.\");\n//     }\n//   };\n\n//   const formatReclamo = (reclamo) => {\n//     const identificadorUnidad = reclamo.unidad ? `ID: ${reclamo.unidad.id}, Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : 'N/A';\n//     return `Reclamo:\n//     - ID Reclamo: ${reclamo.numero}\n//     - Documento de Reclamante: ${reclamo.usuario ? reclamo.usuario.documento : 'No disponible'}\n//     - Código de Edificio: ${reclamo.edificio ? reclamo.edificio.codigo : undefined}\n//     - Ubicación: ${reclamo.ubicacion}\n//     - Identificador de Unidad: ${identificadorUnidad}\n//     - Descripción: ${reclamo.descripcion}\n//     - Estado: ${reclamo.estado}\n//     - Detalle Estado: ${reclamo.detalleEstado}\n//     - Fecha: ${reclamo.fecha}\\n`;\n//   };\n\n//   const obtenerMisReclamos = () => {\n//     const url = \"http://localhost:8080/api/reclamos/mis-reclamos\";\n//     mostrarReclamo(url);\n//   };\n\n//   const agregarReclamoConUnidad = async () => {\n//     try {\n//       const payload = {\n//         codigoEdificio: parseInt(codigoEdificio, 10), // Convertir a entero\n//         piso, // Se envía como string\n//         numeroUnidad, // Se envía como string\n//         ubicacion, // Se envía como string\n//         descripcion, // Se envía como string\n//         tipoReclamo: parseInt(tipoReclamo, 10), // Convertir a entero\n//       };\n\n//       const options = {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${jwtToken}`, // Asegúrate de que jwtToken esté configurado\n//         },\n//         body: JSON.stringify(payload),\n//       };\n\n//       const url = \"http://localhost:8080/api/reclamos/conUnidad\";\n//       const response = await fetch(url, options);\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.message || \"Error al agregar el reclamo.\");\n//       }\n\n//       const result = await response.json();\n//       alert(`Reclamo creado exitosamente con ID: ${result.idReclamo}`);\n//     } catch (error) {\n//       console.error(\"Error al agregar el reclamo:\", error);\n//       alert(`Error: ${error.message}`);\n//     }\n//   };\n\n//   const actualizarReclamo = async () => {\n//     try {\n//       const payload = {\n//         idReclamo: parseInt(idReclamo, 10), // Convertir a entero\n//         ubicacion, // Se envía como string\n//         descripcion, // Se envía como string\n//       };\n\n//       const options = {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${jwtToken}`, // Asegúrate de que jwtToken esté configurado\n//         },\n//         body: JSON.stringify(payload),\n//       };\n\n//       const url = \"http://localhost:8080/api/reclamos/actualizar\";\n//       const response = await fetch(url, options);\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.message || \"Error al actualizar el reclamo.\");\n//       }\n\n//       const result = await response.text();\n//       alert(result);\n//       setShowModal(null); // Cerrar modal tras éxito\n//     } catch (error) {\n//       console.error(\"Error al actualizar el reclamo:\", error);\n//       alert(`Error: ${error.message}`);\n//     }\n//   };\n\n//   const agregarReclamoSinUnidad = async () => {\n//     try {\n//       const payload = {\n//         codigoEdificio: parseInt(codigoEdificio, 10), // Convertir a entero\n//         ubicacion, // Se envía como string\n//         descripcion, // Se envía como string\n//         tipoReclamo: parseInt(tipoReclamo, 10), // Convertir a entero\n//       };\n\n//       const options = {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${jwtToken}`, // Asegúrate de que jwtToken esté configurado\n//         },\n//         body: JSON.stringify(payload),\n//       };\n\n//       const url = \"http://localhost:8080/api/reclamos/sinUnidad\";\n//       const response = await fetch(url, options);\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.message || \"Error al agregar el reclamo.\");\n//       }\n\n//       const idReclamo = await response.json();\n//       alert(`Reclamo creado exitosamente con ID: ${idReclamo}`);\n//     } catch (error) {\n//       console.error(\"Error al agregar el reclamo:\", error);\n//       alert(`Error: ${error.message}`);\n//     }\n//   };\n\n//   const agregarImagen = async () => {\n//     if (!archivo || !idReclamo || !tipo) {\n//       alert(\"Debe seleccionar un archivo, ingresar un ID de reclamo y especificar el tipo.\");\n//       return;\n//     }\n\n//     // Crear el FormData\n//     const formData = new FormData();\n//     formData.append(\"archivo\", archivo); // Archivo seleccionado\n//     formData.append(\"idReclamo\", idReclamo); // ID del reclamo asociado\n//     formData.append(\"tipo\", tipo); // Tipo de archivo\n\n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/imagenes/agregar\", {\n//         method: \"POST\",\n//         headers: {\n//           Authorization: `Bearer ${jwtToken}`, // JWT Token para autenticación\n//         },\n//         body: formData, // FormData con archivo, ID y tipo\n//       });\n\n//       // Manejar la respuesta del servidor\n//       if (!response.ok) {\n//         const errorText = await response.text();\n//         alert(`Error al subir la imagen: ${errorText}`);\n//         return;\n//       }\n\n//       const result = await response.text();\n//       alert(`Éxito: ${result}`);\n//     } catch (error) {\n//       alert(\"Ocurrió un error al subir la imagen. Intente nuevamente.\");\n//     }\n//   };\n\n//   const actualizarImagen = async () => {\n//     if (!archivo || !idImagen || !tipo) {\n//       alert(\"Por favor, complete todos los campos: archivo, ID de la imagen y tipo.\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"archivo\", archivo); // Archivo seleccionado\n//     formData.append(\"tipo\", tipo); // Tipo del archivo\n//     formData.append(\"id\", idImagen); // ID de la imagen a actualizar\n\n//     const url = `http://localhost:8080/api/imagenes/actualizar/${idImagen}`;\n//     const options = {\n//       method: \"PUT\",\n//       headers: {\n//         Authorization: `Bearer ${jwtToken}`, // Agregar token de autorización\n//       },\n//       body: formData, // Form data con archivo, tipo e ID\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       if (!response.ok) {\n//         const error = await response.text();\n//         throw new Error(error);\n//       }\n//       alert(\"Imagen actualizada correctamente.\");\n//       setShowModal(null); // Cerrar modal después de la actualización\n//     } catch (error) {\n//       console.error(\"Error al actualizar la imagen:\", error);\n//       alert(\"Hubo un error al actualizar la imagen.\");\n//     }\n//   };\n\n//   const eliminarImagen = async () => {\n//     if (!idImagen) {\n//       alert(\"Por favor, ingresa un ID válido de la imagen.\");\n//       return;\n//     }\n\n//     const url = `http://localhost:8080/api/imagenes/${idImagen}`;\n//     const options = {\n//       method: \"DELETE\",\n//       headers: {\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       if (response.ok) {\n//         const result = await response.text();\n//         alert(result);\n//         setIdImagen(\"\"); // Limpia el input después de eliminar\n//       } else {\n//         const errorText = await response.text();\n//         console.error(\"Error al eliminar la imagen:\", errorText);\n//         alert(`Error: ${errorText}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error);\n//       alert(\"Ocurrió un error al intentar eliminar la imagen.\");\n//     }\n//   };\n\n//   const verImagen = async () => {\n//     if (!idImagen) {\n//       alert(\"Por favor, ingresa un ID válido de la imagen.\");\n//       return;\n//     }\n\n//     const url = `http://localhost:8080/api/imagenes/ver/${idImagen}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       if (response.ok) {\n//         const blob = await response.blob(); // Recibe la imagen como blob\n//         const urlBlob = URL.createObjectURL(blob); // Crea un URL para la imagen\n//         setModalContent(urlBlob); // Guarda el URL en el estado para mostrar la imagen\n//       } else {\n//         const errorText = await response.text();\n//         console.error(\"Error al ver la imagen:\", errorText);\n//         alert(`Error: ${errorText}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error);\n//       alert(\"Ocurrió un error al intentar ver la imagen.\");\n//     }\n//   };\n\n//   const verImagenesPorReclamo = async (idReclamo) => {\n//     if (!idReclamo) {\n//       alert(\"Por favor, ingresa un ID válido para el reclamo.\");\n//       return;\n//     }\n\n//     const url = `http://localhost:8080/api/imagenes/ver/reclamo/${idReclamo}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       if (response.ok) {\n//         const data = await response.json();\n//         setModalContent(data); // Guarda las imágenes para mostrarlas en el modal\n//       } else {\n//         const errorText = await response.text();\n//         console.error(\"Error al obtener imágenes:\", errorText);\n//         alert(`Error: ${errorText}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error);\n//       alert(\"Ocurrió un error al intentar obtener las imágenes.\");\n//     }\n//   };\n//   /*METODOS UNIDADES*/\n\n//   // Función para obtener las unidades donde el usuario es dueño\n//   const obtenerUnidadesDondeSoyDuenio = async () => {\n//     const url = \"http://localhost:8080/api/unidades/mis-unidades/duenio\";\n\n//     try {\n//       const response = await fetch(url, {\n//         method: \"GET\",\n//       });\n\n//       if (response.ok) {\n//         const data = await response.json();\n//         setModalContent(data); // Configura el modal con las unidades obtenidas\n//         setShowModal(\"misUnidadesDuenio\"); // Abre el modal correspondiente\n//       } else {\n//         const errorText = await response.text();\n//         console.error(\"Error al obtener unidades como dueño:\", errorText);\n//         alert(`Error: ${errorText}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error);\n//       alert(\"Ocurrió un error al intentar obtener las unidades donde eres dueño.\");\n//     }\n//   };\n\n// // Función para obtener las unidades donde el usuario es inquilino\n// const obtenerUnidadesDondeSoyInquilino = async () => {\n//   const url = \"http://localhost:8080/api/unidades/mis-unidades/inquilino\";\n\n//   try {\n//     const response = await fetch(url, {\n//       method: \"GET\",\n//     });\n\n//     if (response.ok) {\n//       const data = await response.json();\n//       setModalContent(data); // Configura el modal con las unidades obtenidas\n//       setShowModal(\"misUnidadesInquilino\"); // Abre el modal correspondiente\n//     } else {\n//       const errorText = await response.text();\n//       console.error(\"Error al obtener unidades como inquilino:\", errorText);\n//       alert(`Error: ${errorText}`);\n//     }\n//   } catch (error) {\n//     console.error(\"Error en la solicitud:\", error);\n//     alert(\"Ocurrió un error al intentar obtener las unidades donde eres inquilino.\");\n//   }\n// };\n\n//   return (\n//     <div className=\"user-dashboard\">\n//       <header className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">PROPSUITE</h1>\n//         <nav className=\"header-buttons\">\n//           <div className=\"dropdown\">\n//             <button className=\"nav-button\">Usuario</button>\n//             <ul className=\"dropdown-menu\">\n//               <li><button className=\"dropdown-item\" onClick={() => setShowModal(\"actualizarNombreUsuario\")}>Actualizar nombre de usuario</button></li>\n//               <li><button className=\"dropdown-item\" onClick={() => setShowModal(\"restablecerContrasena\")}>Restablecer contraseña</button></li>\n//               <li><button className=\"dropdown-item\" onClick={cerrarSesion}>Cerrar sesión</button></li>\n//             </ul>\n//           </div>\n//         </nav>\n//       </header>\n//       <div className=\"welcome-section\">\n//         <h2 className=\"welcome-title\">PROPSUITE</h2>\n//         <p className=\"welcome-subtitle\">Bienvenidos a nuestro sistema, diseñado para hacer tu gestión fácil y dinámica.</p>\n//       </div>\n//       <div className=\"section-container\">\n//   <h2 className=\"section-title\">Reclamos</h2>\n//   <button className=\"section-button\" onClick={() => {\n//     setIdReclamo('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"obtenerReclamoPorId\");\n//   }}>Ver Reclamo por ID</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setCodigoEdificio('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"obtenerReclamosPorEdificio\");\n//   }}>Ver Reclamos por Edificio</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setCodigoEdificio('');\n//     setPiso('');\n//     setNumero('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"obtenerReclamosPorUnidad\");\n//   }}>Ver Reclamos por Unidad</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     obtenerMisReclamos();\n//   }}>Mis Reclamos</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setIdUnidad('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"verReclamosPorIdUnidad\");\n//   }}>Reclamos por ID Unidad</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setIdTipoReclamo('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"verReclamosPorTipo\");\n//   }}>Reclamos por Tipo</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setEstado('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"verReclamosPorEstado\");\n//   }}>Reclamos por Estado</button>\n\n// <button className=\"section-button\" onClick={() => {\n//       setModalContent(''); // Limpia el contenido previo\n//       setShowModal(\"verReclamosEnAreasComunes\");\n//     }}>Reclamos en Áreas Comunes</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setModalContent(\"\"); // Limpia el contenido previo\n//     setShowModal(\"filtrarReclamosPorFecha\");\n//   }}>Filtrar Reclamos por Fecha</button>\n\n// <button className=\"section-button\" onClick={() => {\n//   setCodigoEdificio('');\n//   setPiso('');\n//   setNumeroUnidad('');\n//   setUbicacion('');\n//   setDescripcion('');\n//   setTipoReclamo('');\n//   setModalContent('');\n//   setShowModal(\"agregarReclamoConUnidad\");\n// }}>Agregar Reclamo con Unidad</button>\n\n// <button className=\"section-button\" onClick={() => {\n//   setCodigoEdificio('');\n//   setUbicacion('');\n//   setDescripcion('');\n//   setTipoReclamo('');\n//   setModalContent('');\n//   setShowModal(\"agregarReclamoSinUnidad\");\n// }}>Agregar Reclamo sin Unidad</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setIdReclamo(\"\"); // Limpia el campo previo\n//     setUbicacion(\"\"); // Limpia el campo previo\n//     setDescripcion(\"\"); // Limpia el campo previo\n//     setModalContent(\"\"); // Limpia cualquier contenido previo\n//     setShowModal(\"actualizarReclamo\");\n//   }}>Actualizar Reclamo</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setArchivo(null);\n//     setIdReclamo(\"\");\n//     setTipo(\"\"); // Inicializa el tipo\n//     setShowModal(\"agregarImagen\");\n//     }}> Agregar Imagen</button> \n\n// <button className=\"section-button\" onClick={() => {\n//     setArchivo(null);\n//     setIdImagen(\"\");\n//     setTipo(\"\");\n//     setShowModal(\"actualizarImagen\");\n//   }}> Actualizar Imagen</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setIdImagen(\"\"); // Limpia el estado anterior\n//     setShowModal(\"eliminarImagen\");\n//   }}> Eliminar Imagen</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setIdImagen(\"\"); // Limpia el estado anterior\n//     setModalContent(\"\"); // Limpia el contenido previo\n//     setShowModal(\"verImagen\"); // Muestra el modal\n//   }}> Ver Imagen por ID</button>\n\n// <button className=\"section-button\"  onClick={() => {\n//     setIdReclamo(\"\"); // Limpia el estado del ID\n//     setModalContent([]); // Limpia el contenido previo\n//     setShowModal(\"verImagenesPorReclamo\"); // Abre el modal\n//   }}> Ver Imágenes de un Reclamo</button>\n\n// </div>\n//       <div className=\"section-container\">\n//         <h2 className=\"section-title\">Unidades</h2>\n//         <button\n//   className=\"section-button\"\n//   onClick={() => {\n//     setModalContent([]); // Limpia contenido previo\n//     obtenerUnidadesDondeSoyDuenio(); // Llama a la función para obtener unidades\n//     //setShowModal(\"unidadesDuenio\"); // Abre el modal para mostrar las unidades donde es dueño\n//   }}\n// >\n//   Ver Unidades Donde Soy Dueño\n// </button>\n\n// <button\n//   className=\"section-button\"\n//   onClick={() => {\n//     setModalContent([]); // Limpia contenido previo\n//     obtenerUnidadesDondeSoyInquilino(); // Llama a la función para obtener unidades\n//     //setShowModal(\"unidadesInquilino\"); // Abre el modal para mostrar las unidades donde es inquilino\n//   }}\n// >\n//   Ver Unidades Donde Soy Inquilino\n// </button>\n\n//       </div>\n\n//       {/* Modales para usuario */}\n//       {showModal === \"actualizarNombreUsuario\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Actualizar Nombre de Usuario</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Nuevo nombre de usuario\"\n//               value={nuevoNombreUsuario}\n//               onChange={(e) => setNuevoNombreUsuario(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={actualizarNombreUsuario}>Guardar</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cancelar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {showModal === \"restablecerContrasena\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Restablecer Contraseña</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Nombre de usuario\"\n//               value={nombreUsuario}\n//               onChange={(e) => setNombreUsuario(e.target.value)}\n//             />\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Documento: Ejemplo: 'DNI45286575'\"\n//               value={dni}\n//               onChange={(e) => setDni(e.target.value)}\n//             />\n//             <input\n//               className=\"modal-input\"\n//               type=\"password\"\n//               placeholder=\"Nueva contraseña\"\n//               value={nuevaContrasena}\n//               onChange={(e) => setNuevaContrasena(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={restablecerContrasena}>Restablecer</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cancelar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Modal para ver Reclamo por ID */}\n//       {showModal === \"obtenerReclamoPorId\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Ver Reclamo por ID</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"ID del Reclamo\"\n//               value={idReclamo}\n//               onChange={(e) => setIdReclamo(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={async () => {\n//                 const url = `http://localhost:8080/api/reclamos/${idReclamo}`;\n//                 const options = {\n//                   method: \"GET\",\n//                   headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${jwtToken}`,\n//                   },\n//                 };\n//                 const result = await handleApiCall(url, options);\n//                 if (result) {\n//                   const formatted = `\n//                     - ID Reclamo: ${result.numero}\n//                     - Documento de Reclamante: ${result.usuario?.documento || \"No disponible\"}\n//                     - Código de Edificio: ${result.edificio?.codigo || \"N/A\"}\n//                     - Ubicación: ${result.ubicacion}\n//                     - Identificador de Unidad: ${\n//                       result.unidad ? `ID: ${result.unidad.id}, Piso: ${result.unidad.piso}, Número: ${result.unidad.numero}` : \"N/A\"\n//                     }\n//                     - Descripción: ${result.descripcion}\n//                     - Estado: ${result.estado}\n//                     - Detalle Estado: ${result.detalleEstado}\n//                     - Fecha: ${result.fecha}`;\n//                   setModalContent(formatted);\n//                   setShowModal(\"verMisReclamos\");\n//                 }\n//               }}>Buscar</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Modal para ver Reclamos por Edificio */}\n//       {showModal === \"obtenerReclamosPorEdificio\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Ver Reclamos por Edificio</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Código del Edificio\"\n//               value={codigoEdificio}\n//               onChange={(e) => setCodigoEdificio(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={async () => {\n//                 const url = `http://localhost:8080/api/reclamos/edificio/${codigoEdificio}`;\n//                 const options = {\n//                   method: \"GET\",\n//                   headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${jwtToken}`,\n//                   },\n//                 };\n//                 const result = await handleApiCall(url, options);\n//                 if (result) {\n//                   const formatted = result.map((reclamo, index) => `\n//                     Reclamo ${index + 1}:\n//                     - ID Reclamo: ${reclamo.numero}\n//                     - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//                     - Ubicación: ${reclamo.ubicacion}\n//                     - Descripción: ${reclamo.descripcion}\n//                     - Estado: ${reclamo.estado}\n//                     - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//                   setModalContent(formatted);\n//                   setShowModal(\"verMisReclamos\");\n//                 }\n//               }}>Buscar</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       {showModal === \"agregarReclamoConUnidad\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Agregar Reclamo con Unidad</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"Código del Edificio\"\n//         value={codigoEdificio}\n//         onChange={(e) => setCodigoEdificio(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Piso\"\n//         value={piso}\n//         onChange={(e) => setPiso(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Número de Unidad\"\n//         value={numeroUnidad}\n//         onChange={(e) => setNumeroUnidad(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ubicación\"\n//         value={ubicacion}\n//         onChange={(e) => setUbicacion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Descripción\"\n//         value={descripcion}\n//         onChange={(e) => setDescripcion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"Tipo de Reclamo\"\n//         value={tipoReclamo}\n//         onChange={(e) => setTipoReclamo(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={agregarReclamoConUnidad}>Agregar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"agregarReclamoSinUnidad\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Agregar Reclamo sin Unidad</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"Código del Edificio\"\n//         value={codigoEdificio}\n//         onChange={(e) => setCodigoEdificio(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ubicación\"\n//         value={ubicacion}\n//         onChange={(e) => setUbicacion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Descripción\"\n//         value={descripcion}\n//         onChange={(e) => setDescripcion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"Tipo de Reclamo\"\n//         value={tipoReclamo}\n//         onChange={(e) => setTipoReclamo(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={agregarReclamoSinUnidad}>Agregar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n//       {/* Modal para ver Reclamos por Unidad */}\n//       {showModal === \"obtenerReclamosPorUnidad\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Ver Reclamos por Unidad</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Código del Edificio\"\n//               value={codigoEdificio}\n//               onChange={(e) => setCodigoEdificio(e.target.value)}\n//             />\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Piso\"\n//               value={piso}\n//               onChange={(e) => setPiso(e.target.value)}\n//             />\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Número\"\n//               value={numero}\n//               onChange={(e) => setNumero(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={async () => {\n//                 const url = `http://localhost:8080/api/reclamos/unidad/${codigoEdificio}/${piso}/${numero}`;\n//                 const options = {\n//                   method: \"GET\",\n//                   headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${jwtToken}`,\n//                   },\n//                 };\n//                 const result = await handleApiCall(url, options);\n//                 if (result) {\n//                   const formatted = result.map((reclamo, index) => `\n//                     Reclamo ${index + 1}:\n//                     - ID Reclamo: ${reclamo.numero}\n//                     - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//                     - Ubicación: ${reclamo.ubicacion}\n//                     - Descripción: ${reclamo.descripcion}\n//                     - Estado: ${reclamo.estado}\n//                     - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//                   setModalContent(formatted);\n//                   setShowModal(\"verMisReclamos\");\n//                 }\n//               }}>Buscar</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       {/* Modal para ver Reclamos por ID Unidad */}\n// {showModal === \"verReclamosPorIdUnidad\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Reclamos por ID Unidad</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ingrese el ID de la Unidad\"\n//         value={idUnidad}\n//         onChange={(e) => setIdUnidad(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={async () => {\n//           const url = `http://localhost:8080/api/reclamos/unidad/${idUnidad}`;\n//           const options = {\n//             method: \"GET\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Bearer ${jwtToken}`,\n//             },\n//           };\n//           const result = await handleApiCall(url, options);\n//           if (result) {\n//             const formatted = result.map((reclamo, index) => `\n//               Reclamo ${index + 1}:\n//               - ID Reclamo: ${reclamo.numero}\n//               - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//               - Ubicación: ${reclamo.ubicacion}\n//               - Identificador de Unidad: ${reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : \"N/A\"}\n//               - Descripción: ${reclamo.descripcion}\n//               - Estado: ${reclamo.estado}\n//               - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//             setModalContent(formatted);\n//             setShowModal(\"verMisReclamos\");\n//           }\n//         }}>Buscar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {/* Modal para ver Reclamos por Tipo */}\n// {showModal === \"verReclamosPorTipo\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Reclamos por Tipo</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ingrese el ID del Tipo de Reclamo\"\n//         value={idTipoReclamo}\n//         onChange={(e) => setIdTipoReclamo(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={async () => {\n//           const url = `http://localhost:8080/api/reclamos/tipo/${idTipoReclamo}`;\n//           const options = {\n//             method: \"GET\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Bearer ${jwtToken}`,\n//             },\n//           };\n//           const result = await handleApiCall(url, options);\n//           if (result) {\n//             const formatted = result.map((reclamo, index) => `\n//               Reclamo ${index + 1}:\n//               - ID Reclamo: ${reclamo.numero}\n//               - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//               - Tipo de Reclamo: ${idTipoReclamo}\n//               - Ubicación: ${reclamo.ubicacion}\n//               - Descripción: ${reclamo.descripcion}\n//               - Estado: ${reclamo.estado}\n//               - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//             setModalContent(formatted);\n//             setShowModal(\"verMisReclamos\");\n//           }\n//         }}>Buscar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {/* Modal para ver Reclamos por Estado */}\n// {showModal === \"verReclamosPorEstado\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Reclamos por Estado</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ingrese el Estado del Reclamo\"\n//         value={estado}\n//         onChange={(e) => setEstado(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={async () => {\n//           const url = `http://localhost:8080/api/reclamos/estado/${estado}`;\n//           const options = {\n//             method: \"GET\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Bearer ${jwtToken}`,\n//             },\n//           };\n//           const result = await handleApiCall(url, options);\n//           if (result) {\n//             const formatted = result.map((reclamo, index) => `\n//               Reclamo ${index + 1}:\n//               - ID Reclamo: ${reclamo.numero}\n//               - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//               - Estado: ${estado}\n//               - Ubicación: ${reclamo.ubicacion}\n//               - Identificador de Unidad: ${reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : \"N/A\"}\n//               - Descripción: ${reclamo.descripcion}\n//               - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//             setModalContent(formatted);\n//             setShowModal(\"verMisReclamos\");\n//           }\n//         }}>Buscar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n// {showModal === \"verReclamosEnAreasComunes\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Reclamos en Áreas Comunes</h2>\n//       <div className=\"modal-buttons\">\n//         <button\n//           className=\"section-button\"\n//           onClick={async () => {\n//             const url = \"http://localhost:8080/api/reclamos/areas-comunes\";\n//             const options = {\n//               method: \"GET\",\n//               headers: {\n//                 \"Content-Type\": \"application/json\",\n//                 Authorization: `Bearer ${jwtToken}`,\n//               },\n//             };\n//             const result = await handleApiCall(url, options);\n//             if (result) {\n//               const formatted = result.map((reclamo, index) => `\n//                 Reclamo ${index + 1}:\n//                 - ID Reclamo: ${reclamo.numero}\n//                 - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//                 - Ubicación: ${reclamo.ubicacion}\n//                 - Identificador de Unidad: ${reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : \"N/A\"}\n//                 - Descripción: ${reclamo.descripcion}\n//                 - Estado: ${reclamo.estado}\n//                 - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//               setModalContent(formatted);\n//               setShowModal(\"verMisReclamos\");\n//             }\n//           }}\n//         >\n//           Buscar\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"filtrarReclamosPorFecha\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Filtrar Reclamos por Fecha</h2>\n//       <p>Seleccione cómo desea ordenar los reclamos:</p>\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={() => filtrarReclamosPorFecha(true)}>\n//           Más Recientes Primero\n//         </button>\n//         <button className=\"section-button\" onClick={() => filtrarReclamosPorFecha(false)}>\n//           Más Antiguos Primero\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"actualizarReclamo\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Actualizar Reclamo</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"ID del Reclamo\"\n//         value={idReclamo}\n//         onChange={(e) => setIdReclamo(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Nueva Ubicación\"\n//         value={ubicacion}\n//         onChange={(e) => setUbicacion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Descripción Actualizada\"\n//         value={descripcion}\n//         onChange={(e) => setDescripcion(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={actualizarReclamo}>\n//           Actualizar\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//           Cancelar\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"agregarImagen\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Agregar Imagen</h2>\n//       <label className=\"modal-label\">Seleccione una imagen:</label>\n//       <input\n//         type=\"file\"\n//         accept=\"image/*\" // Solo permitir imágenes\n//         onChange={(e) => setArchivo(e.target.files[0])} // Guardar archivo seleccionado\n//       />\n//       <label className=\"modal-label\">ID del Reclamo:</label>\n//       <input\n//         type=\"number\"\n//         placeholder=\"Ingrese el ID del reclamo\"\n//         value={idReclamo}\n//         onChange={(e) => setIdReclamo(e.target.value)} // Guardar ID del reclamo\n//       />\n//       <label className=\"modal-label\">Tipo de Imagen (jpg, png, etc.):</label>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Ingrese el tipo de imagen\"\n//         value={tipo}\n//         onChange={(e) => setTipo(e.target.value)} // Guardar tipo de archivo\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={agregarImagen}>\n//           Subir Imagen\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//           Cancelar\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"actualizarImagen\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Actualizar Imagen</h2>\n//       <label className=\"modal-label\">ID de la Imagen:</label>\n//       <input\n//         type=\"number\"\n//         placeholder=\"Ingrese el ID de la imagen\"\n//         value={idImagen}\n//         onChange={(e) => setIdImagen(e.target.value)}\n//       />\n//       <label className=\"modal-label\">Seleccione un nuevo archivo:</label>\n//       <input\n//         type=\"file\"\n//         accept=\"image/*\"\n//         onChange={(e) => setArchivo(e.target.files[0])}\n//       />\n//       <label className=\"modal-label\">Tipo de Archivo:</label>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Ejemplo: jpg, jpeg, png\"\n//         value={tipo}\n//         onChange={(e) => setTipo(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={actualizarImagen}>\n//           Actualizar Imagen\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//           Cancelar\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"eliminarImagen\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Eliminar Imagen</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"ID de la Imagen\"\n//         value={idImagen}\n//         onChange={(e) => setIdImagen(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={eliminarImagen}>\n//           Eliminar\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//           Cerrar\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"verImagen\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Ver Imagen</h2>\n//       {!modalContent ? (\n//         <>\n//           <input\n//             className=\"modal-input\"\n//             type=\"text\"\n//             placeholder=\"ID de la Imagen\"\n//             value={idImagen}\n//             onChange={(e) => setIdImagen(e.target.value)}\n//           />\n//           <div className=\"modal-buttons\">\n//             <button className=\"section-button\" onClick={verImagen}>\n//               Ver Imagen\n//             </button>\n//             <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//               Cerrar\n//             </button>\n//           </div>\n//         </>\n//       ) : (\n//         <>\n//           <img\n//             src={modalContent}\n//             alt=\"Vista previa\"\n//             className=\"image-preview\"\n//             style={{ maxWidth: \"100%\", maxHeight: \"400px\" }}\n//           />\n//           <div className=\"modal-buttons\">\n//             <button className=\"section-button\" onClick={() => setModalContent(\"\")}>\n//               Ver Otra Imagen\n//             </button>\n//             <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//               Cerrar\n//             </button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"verImagenesPorReclamo\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Imágenes del Reclamo</h2>\n//       {!modalContent || modalContent.length === 0 ? (\n//         <>\n//           <input\n//             className=\"modal-input\"\n//             type=\"text\"\n//             placeholder=\"ID del Reclamo\"\n//             value={idReclamo}\n//             onChange={(e) => setIdReclamo(e.target.value)}\n//           />\n//           <div className=\"modal-buttons\">\n//             <button className=\"section-button\" onClick={() => verImagenesPorReclamo(idReclamo)}>\n//               Ver Imágenes\n//             </button>\n//             <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//               Cerrar\n//             </button>\n//           </div>\n//         </>\n//       ) : (\n//         <div className=\"image-gallery\">\n//           {modalContent.map((imagen, index) => (\n//             <img\n//               key={index}\n//               src={imagen.contenido}\n//               alt={`Imagen ${index + 1}`}\n//               className=\"image-preview\"\n//               style={{ maxWidth: \"100%\", maxHeight: \"200px\", margin: \"10px\" }}\n//             />\n//           ))}\n//           <div className=\"modal-buttons\">\n//             <button className=\"section-button\" onClick={() => setModalContent([])}>\n//               Ver Otro Reclamo\n//             </button>\n//             <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//               Cerrar\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   </div>\n// )}\n\n// {/* modal para unidades*/}\n// {showModal === \"misUnidadesDuenio\" && (\n//   <Modal onClose={() => setShowModal(\"\")}>\n//     <h2>Mis Unidades (Dueño)</h2>\n//     <ul>\n//       {modalContent.map((unidad, index) => (\n//         <li key={index}>\n//           Piso: {unidad.piso}, Número: {unidad.numero}, Habitado:{\" \"}\n//           {unidad.habitado ? \"Sí\" : \"No\"}\n//         </li>\n//       ))}\n//     </ul>\n//   </Modal>\n// )}\n\n// {showModal === \"misUnidadesInquilino\" && (\n//   <Modal onClose={() => setShowModal(\"\")}>\n//     <h2>Mis Unidades (Inquilino)</h2>\n//     <ul>\n//       {modalContent.map((unidad, index) => (\n//         <li key={index}>\n//           Piso: {unidad.piso}, Número: {unidad.numero}, Habitado:{\" \"}\n//           {unidad.habitado ? \"Sí\" : \"No\"}\n//         </li>\n//       ))}\n//     </ul>\n//   </Modal>\n// )}\n\n// {/* Modal para mostrar los resultados */}\n//       {showModal === \"verMisReclamos\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Resultado de Reclamos</h2>\n//             <pre>{modalContent || \"No hay reclamos disponibles.\"}</pre>\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }  \n\n// export default UsuarioDashboard;","map":{"version":3,"names":[],"sources":["/Users/marcospirchio/IdeaProjects/TpApis/AdministracionEdificiosTpApis/client/src/components/AdminDashboard.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import \"./UserDashboard.css\";\n\n// function UsuarioDashboard() {\n//   const [showModal, setShowModal] = useState(null);\n//   const [modalContent, setModalContent] = useState(\"\");\n//   const [nuevoNombreUsuario, setNuevoNombreUsuario] = useState(\"\");\n//   const [nombreUsuario, setNombreUsuario] = useState(\"\");\n//   const [dni, setDni] = useState(\"\");\n//   const [nuevaContrasena, setNuevaContrasena] = useState(\"\");\n//   const [idReclamo, setIdReclamo] = useState(\"\");\n//   const [codigoEdificio, setCodigoEdificio] = useState(\"\");\n//   const [piso, setPiso] = useState(\"\");\n//   const [numero, setNumero] = useState(\"\");\n//   const [idUnidad, setIdUnidad] = useState(\"\");\n//   const [idTipoReclamo, setIdTipoReclamo] = useState(\"\");\n//   const [estado, setEstado] = useState(\"\");\n//   const [numeroUnidad, setNumeroUnidad] = useState(\"\");\n//   const [ubicacion, setUbicacion] = useState(\"\");\n//   const [descripcion, setDescripcion] = useState(\"\");\n//   const [tipoReclamo, setTipoReclamo] = useState(\"\");\n//   const [archivo, setArchivo] = useState(null);\n//   const [tipo, setTipo] = useState(\"\"); \n//   const [idImagen, setIdImagen] = useState(\"\"); \n  \n\n//   const jwtToken = localStorage.getItem(\"jwtToken\");\n\n//   const handleApiCall = async (url, options) => {\n//     try {\n//       const response = await fetch(url, options);\n//       const data = await response.json();\n//       if (!response.ok) {\n//         throw new Error(data.message || 'Error desconocido');\n//       }\n//       return data;\n//     } catch (error) {\n//       console.error('Error en la solicitud:', error);\n//       alert(`Error: ${error.message}`);\n//       return null;\n//     }\n//   };\n// /*METODOS USUARIOS*/\n//   const actualizarNombreUsuario = async () => {\n//     const url = \"http://localhost:8080/api/usuario/actualizar-nombre-usuario\";\n//     const options = {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//       body: JSON.stringify({ nuevoNombreUsuario }),\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       alert(\"Nombre de usuario actualizado con éxito. Por favor, vuelve a iniciar sesión.\");\n//       cerrarSesion();\n//     }\n//   };\n\n//   const restablecerContrasena = async () => {\n//     const url = \"http://localhost:8080/api/usuario/restablecerContrasena\";\n//     const options = {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\n//         nombreUsuario,\n//         dni,\n//         nuevaContrasena,\n//       }),\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       alert(\"Contraseña restablecida correctamente. Por favor, vuelve a iniciar sesión.\");\n//       cerrarSesion();\n//     }\n//   };\n\n//   const cerrarSesion = () => {\n//     localStorage.removeItem(\"jwtToken\");\n//     alert(\"Sesión cerrada. Redirigiendo a la página de inicio.\");\n//     window.location.href = \"http://localhost:3000/\";\n//   };\n\n//   /*METODOS RECLAMOS*/\n//   const mostrarReclamo = async (url) => {\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formattedResult = Array.isArray(result) ? result.map((reclamo, index) => {\n//         const unidadInfo = reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : 'N/A';\n//         return `Reclamo ${index + 1}:\n//           - ID Reclamo: ${reclamo.numero}\n//           - Documento de Reclamante: ${reclamo.usuario ? reclamo.usuario.documento : 'No disponible'}\n//           - Código de Edificio: ${reclamo.edificio ? reclamo.edificio.codigo : 'N/A'}\n//           - Ubicación: ${reclamo.ubicacion}\n//           - Identificador de Unidad: ${unidadInfo}\n//           - Descripción: ${reclamo.descripcion}\n//           - Estado: ${reclamo.estado}\n//           - Detalle Estado: ${reclamo.detalleEstado}\n//           - Fecha: ${reclamo.fecha}\\n`;\n//       }).join(\"\\n\") : \"No se encontraron reclamos.\";\n//       setModalContent(formattedResult);\n//       setShowModal(\"verMisReclamos\");\n//     }\n//   };\n\n//   const obtenerReclamoPorId = async () => {\n//     const url = `http://localhost:8080/api/reclamos/${idReclamo}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = formatReclamo(result);\n//       setModalContent(formatted);\n//       setShowModal(\"verMisReclamos\");\n//     }\n//   };\n  \n//   const obtenerReclamosPorEdificio = async () => {\n//     const url = `http://localhost:8080/api/reclamos/edificio/${codigoEdificio}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map(reclamo => formatReclamo(reclamo)).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verMisReclamos\");\n//     }\n//   };\n  \n//   const obtenerReclamosPorUnidad = async () => {\n//     const url = `http://localhost:8080/api/reclamos/unidad/${codigoEdificio}/${piso}/${numero}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map(reclamo => formatReclamo(reclamo)).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verMisReclamos\");\n//     }\n//   };\n\n//   const obtenerReclamosPorIdUnidad = async () => {\n//     const url = `http://localhost:8080/api/reclamos/unidad/${idUnidad}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map((reclamo, index) => {\n//         const unidadInfo = reclamo.unidad\n//           ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}, ID: ${reclamo.unidad.id}`\n//           : \"N/A\";\n  \n//         return `Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Identificador de Unidad: ${unidadInfo}\n//         - Descripción: ${reclamo.descripcion}\n//         - Estado: ${reclamo.estado}\n//         - Fecha: ${reclamo.fecha}`;\n//       }).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verReclamosPorIdUnidad\");\n//     }\n//   };\n  \n//   const obtenerReclamosPorTipo = async () => {\n//     const url = `http://localhost:8080/api/reclamos/tipo/${idTipoReclamo}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map((reclamo, index) => {\n//         const unidadInfo = reclamo.unidad\n//           ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}, ID: ${reclamo.unidad.id}`\n//           : \"N/A\";\n  \n//         return `Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Tipo de Reclamo: ${idTipoReclamo}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Identificador de Unidad: ${unidadInfo}\n//         - Descripción: ${reclamo.descripcion}\n//         - Estado: ${reclamo.estado}\n//         - Fecha: ${reclamo.fecha}`;\n//       }).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verReclamosPorTipo\");\n//     }\n//   };\n  \n//   const obtenerReclamosPorEstado = async () => {\n//     const url = `http://localhost:8080/api/reclamos/estado/${estado}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map((reclamo, index) => {\n//         const unidadInfo = reclamo.unidad\n//           ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}, ID: ${reclamo.unidad.id}`\n//           : \"N/A\";\n  \n//         return `Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Estado: ${estado}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Identificador de Unidad: ${unidadInfo}\n//         - Descripción: ${reclamo.descripcion}\n//         - Fecha: ${reclamo.fecha}`;\n//       }).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verReclamosPorEstado\");\n//     }\n//   };\n  \n//   const obtenerReclamosEnAreasComunes = async () => {\n//     const url = \"http://localhost:8080/api/reclamos/areas-comunes\";\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n  \n//     const result = await handleApiCall(url, options);\n//     if (result) {\n//       const formatted = result.map((reclamo, index) => `\n//         Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Identificador de Unidad: ${\n//           reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : \"N/A\"\n//         }\n//         - Descripción: ${reclamo.descripcion}\n//         - Estado: ${reclamo.estado}\n//         - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//       setModalContent(formatted);\n//       setShowModal(\"verReclamosEnAreasComunes\");\n//     }\n//   };\n\n  \n//   const filtrarReclamosPorFecha = async (masRecientes) => {\n//     const url = `http://localhost:8080/api/reclamos/mis-reclamos/filtrar?masRecientes=${masRecientes}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${jwtToken}`, // Asegúrate de que jwtToken sea válido\n//       },\n//     };\n  \n//     try {\n//       const response = await fetch(url, options);\n//       if (!response.ok) {\n//         const errorText = await response.text(); // Captura posibles errores del servidor\n//         console.error(\"Error del servidor:\", errorText);\n//         throw new Error(`HTTP ${response.status}`);\n//       }\n  \n//       const result = await response.json();\n//       const formatted = result.map((reclamo, index) => `\n//         Reclamo ${index + 1}:\n//         - ID Reclamo: ${reclamo.numero}\n//         - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//         - Ubicación: ${reclamo.ubicacion}\n//         - Descripción: ${reclamo.descripcion}\n//         - Estado: ${reclamo.estado}\n//         - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n  \n//       setModalContent(formatted);\n//       setShowModal(\"verMisReclamos\");\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error.message);\n//       alert(\"No se pudo cargar los reclamos. Por favor, verifica tus credenciales o intenta nuevamente.\");\n//     }\n//   };\n  \n  \n\n//   const formatReclamo = (reclamo) => {\n//     const identificadorUnidad = reclamo.unidad ? `ID: ${reclamo.unidad.id}, Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : 'N/A';\n//     return `Reclamo:\n//     - ID Reclamo: ${reclamo.numero}\n//     - Documento de Reclamante: ${reclamo.usuario ? reclamo.usuario.documento : 'No disponible'}\n//     - Código de Edificio: ${reclamo.edificio ? reclamo.edificio.codigo : undefined}\n//     - Ubicación: ${reclamo.ubicacion}\n//     - Identificador de Unidad: ${identificadorUnidad}\n//     - Descripción: ${reclamo.descripcion}\n//     - Estado: ${reclamo.estado}\n//     - Detalle Estado: ${reclamo.detalleEstado}\n//     - Fecha: ${reclamo.fecha}\\n`;\n//   };\n\n//   const obtenerMisReclamos = () => {\n//     const url = \"http://localhost:8080/api/reclamos/mis-reclamos\";\n//     mostrarReclamo(url);\n//   };\n\n//   const agregarReclamoConUnidad = async () => {\n//     try {\n//       const payload = {\n//         codigoEdificio: parseInt(codigoEdificio, 10), // Convertir a entero\n//         piso, // Se envía como string\n//         numeroUnidad, // Se envía como string\n//         ubicacion, // Se envía como string\n//         descripcion, // Se envía como string\n//         tipoReclamo: parseInt(tipoReclamo, 10), // Convertir a entero\n//       };\n  \n//       const options = {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${jwtToken}`, // Asegúrate de que jwtToken esté configurado\n//         },\n//         body: JSON.stringify(payload),\n//       };\n  \n//       const url = \"http://localhost:8080/api/reclamos/conUnidad\";\n//       const response = await fetch(url, options);\n  \n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.message || \"Error al agregar el reclamo.\");\n//       }\n  \n//       const result = await response.json();\n//       alert(`Reclamo creado exitosamente con ID: ${result.idReclamo}`);\n//     } catch (error) {\n//       console.error(\"Error al agregar el reclamo:\", error);\n//       alert(`Error: ${error.message}`);\n//     }\n//   };\n  \n//   const actualizarReclamo = async () => {\n//     try {\n//       const payload = {\n//         idReclamo: parseInt(idReclamo, 10), // Convertir a entero\n//         ubicacion, // Se envía como string\n//         descripcion, // Se envía como string\n//       };\n  \n//       const options = {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${jwtToken}`, // Asegúrate de que jwtToken esté configurado\n//         },\n//         body: JSON.stringify(payload),\n//       };\n  \n//       const url = \"http://localhost:8080/api/reclamos/actualizar\";\n//       const response = await fetch(url, options);\n  \n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.message || \"Error al actualizar el reclamo.\");\n//       }\n  \n//       const result = await response.text();\n//       alert(result);\n//       setShowModal(null); // Cerrar modal tras éxito\n//     } catch (error) {\n//       console.error(\"Error al actualizar el reclamo:\", error);\n//       alert(`Error: ${error.message}`);\n//     }\n//   };\n  \n\n//   const agregarReclamoSinUnidad = async () => {\n//     try {\n//       const payload = {\n//         codigoEdificio: parseInt(codigoEdificio, 10), // Convertir a entero\n//         ubicacion, // Se envía como string\n//         descripcion, // Se envía como string\n//         tipoReclamo: parseInt(tipoReclamo, 10), // Convertir a entero\n//       };\n  \n//       const options = {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${jwtToken}`, // Asegúrate de que jwtToken esté configurado\n//         },\n//         body: JSON.stringify(payload),\n//       };\n  \n//       const url = \"http://localhost:8080/api/reclamos/sinUnidad\";\n//       const response = await fetch(url, options);\n  \n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.message || \"Error al agregar el reclamo.\");\n//       }\n  \n//       const idReclamo = await response.json();\n//       alert(`Reclamo creado exitosamente con ID: ${idReclamo}`);\n//     } catch (error) {\n//       console.error(\"Error al agregar el reclamo:\", error);\n//       alert(`Error: ${error.message}`);\n//     }\n//   };\n  \n//   const agregarImagen = async () => {\n//     if (!archivo || !idReclamo || !tipo) {\n//       alert(\"Debe seleccionar un archivo, ingresar un ID de reclamo y especificar el tipo.\");\n//       return;\n//     }\n  \n//     // Crear el FormData\n//     const formData = new FormData();\n//     formData.append(\"archivo\", archivo); // Archivo seleccionado\n//     formData.append(\"idReclamo\", idReclamo); // ID del reclamo asociado\n//     formData.append(\"tipo\", tipo); // Tipo de archivo\n  \n//     try {\n//       const response = await fetch(\"http://localhost:8080/api/imagenes/agregar\", {\n//         method: \"POST\",\n//         headers: {\n//           Authorization: `Bearer ${jwtToken}`, // JWT Token para autenticación\n//         },\n//         body: formData, // FormData con archivo, ID y tipo\n//       });\n  \n//       // Manejar la respuesta del servidor\n//       if (!response.ok) {\n//         const errorText = await response.text();\n//         alert(`Error al subir la imagen: ${errorText}`);\n//         return;\n//       }\n  \n//       const result = await response.text();\n//       alert(`Éxito: ${result}`);\n//     } catch (error) {\n//       alert(\"Ocurrió un error al subir la imagen. Intente nuevamente.\");\n//     }\n//   };\n  \n//   const actualizarImagen = async () => {\n//     if (!archivo || !idImagen || !tipo) {\n//       alert(\"Por favor, complete todos los campos: archivo, ID de la imagen y tipo.\");\n//       return;\n//     }\n  \n//     const formData = new FormData();\n//     formData.append(\"archivo\", archivo); // Archivo seleccionado\n//     formData.append(\"tipo\", tipo); // Tipo del archivo\n//     formData.append(\"id\", idImagen); // ID de la imagen a actualizar\n  \n//     const url = `http://localhost:8080/api/imagenes/actualizar/${idImagen}`;\n//     const options = {\n//       method: \"PUT\",\n//       headers: {\n//         Authorization: `Bearer ${jwtToken}`, // Agregar token de autorización\n//       },\n//       body: formData, // Form data con archivo, tipo e ID\n//     };\n  \n//     try {\n//       const response = await fetch(url, options);\n//       if (!response.ok) {\n//         const error = await response.text();\n//         throw new Error(error);\n//       }\n//       alert(\"Imagen actualizada correctamente.\");\n//       setShowModal(null); // Cerrar modal después de la actualización\n//     } catch (error) {\n//       console.error(\"Error al actualizar la imagen:\", error);\n//       alert(\"Hubo un error al actualizar la imagen.\");\n//     }\n//   };\n  \n//   const eliminarImagen = async () => {\n//     if (!idImagen) {\n//       alert(\"Por favor, ingresa un ID válido de la imagen.\");\n//       return;\n//     }\n  \n//     const url = `http://localhost:8080/api/imagenes/${idImagen}`;\n//     const options = {\n//       method: \"DELETE\",\n//       headers: {\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n  \n//     try {\n//       const response = await fetch(url, options);\n//       if (response.ok) {\n//         const result = await response.text();\n//         alert(result);\n//         setIdImagen(\"\"); // Limpia el input después de eliminar\n//       } else {\n//         const errorText = await response.text();\n//         console.error(\"Error al eliminar la imagen:\", errorText);\n//         alert(`Error: ${errorText}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error);\n//       alert(\"Ocurrió un error al intentar eliminar la imagen.\");\n//     }\n//   };\n  \n//   const verImagen = async () => {\n//     if (!idImagen) {\n//       alert(\"Por favor, ingresa un ID válido de la imagen.\");\n//       return;\n//     }\n  \n//     const url = `http://localhost:8080/api/imagenes/ver/${idImagen}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n  \n//     try {\n//       const response = await fetch(url, options);\n//       if (response.ok) {\n//         const blob = await response.blob(); // Recibe la imagen como blob\n//         const urlBlob = URL.createObjectURL(blob); // Crea un URL para la imagen\n//         setModalContent(urlBlob); // Guarda el URL en el estado para mostrar la imagen\n//       } else {\n//         const errorText = await response.text();\n//         console.error(\"Error al ver la imagen:\", errorText);\n//         alert(`Error: ${errorText}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error);\n//       alert(\"Ocurrió un error al intentar ver la imagen.\");\n//     }\n//   };\n  \n//   const verImagenesPorReclamo = async (idReclamo) => {\n//     if (!idReclamo) {\n//       alert(\"Por favor, ingresa un ID válido para el reclamo.\");\n//       return;\n//     }\n  \n//     const url = `http://localhost:8080/api/imagenes/ver/reclamo/${idReclamo}`;\n//     const options = {\n//       method: \"GET\",\n//       headers: {\n//         Authorization: `Bearer ${jwtToken}`,\n//       },\n//     };\n  \n//     try {\n//       const response = await fetch(url, options);\n//       if (response.ok) {\n//         const data = await response.json();\n//         setModalContent(data); // Guarda las imágenes para mostrarlas en el modal\n//       } else {\n//         const errorText = await response.text();\n//         console.error(\"Error al obtener imágenes:\", errorText);\n//         alert(`Error: ${errorText}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error);\n//       alert(\"Ocurrió un error al intentar obtener las imágenes.\");\n//     }\n//   };\n//   /*METODOS UNIDADES*/\n  \n//   // Función para obtener las unidades donde el usuario es dueño\n//   const obtenerUnidadesDondeSoyDuenio = async () => {\n//     const url = \"http://localhost:8080/api/unidades/mis-unidades/duenio\";\n  \n//     try {\n//       const response = await fetch(url, {\n//         method: \"GET\",\n//       });\n  \n//       if (response.ok) {\n//         const data = await response.json();\n//         setModalContent(data); // Configura el modal con las unidades obtenidas\n//         setShowModal(\"misUnidadesDuenio\"); // Abre el modal correspondiente\n//       } else {\n//         const errorText = await response.text();\n//         console.error(\"Error al obtener unidades como dueño:\", errorText);\n//         alert(`Error: ${errorText}`);\n//       }\n//     } catch (error) {\n//       console.error(\"Error en la solicitud:\", error);\n//       alert(\"Ocurrió un error al intentar obtener las unidades donde eres dueño.\");\n//     }\n//   };\n  \n  \n// // Función para obtener las unidades donde el usuario es inquilino\n// const obtenerUnidadesDondeSoyInquilino = async () => {\n//   const url = \"http://localhost:8080/api/unidades/mis-unidades/inquilino\";\n\n//   try {\n//     const response = await fetch(url, {\n//       method: \"GET\",\n//     });\n\n//     if (response.ok) {\n//       const data = await response.json();\n//       setModalContent(data); // Configura el modal con las unidades obtenidas\n//       setShowModal(\"misUnidadesInquilino\"); // Abre el modal correspondiente\n//     } else {\n//       const errorText = await response.text();\n//       console.error(\"Error al obtener unidades como inquilino:\", errorText);\n//       alert(`Error: ${errorText}`);\n//     }\n//   } catch (error) {\n//     console.error(\"Error en la solicitud:\", error);\n//     alert(\"Ocurrió un error al intentar obtener las unidades donde eres inquilino.\");\n//   }\n// };\n\n\n  \n  \n  \n\n//   return (\n//     <div className=\"user-dashboard\">\n//       <header className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">PROPSUITE</h1>\n//         <nav className=\"header-buttons\">\n//           <div className=\"dropdown\">\n//             <button className=\"nav-button\">Usuario</button>\n//             <ul className=\"dropdown-menu\">\n//               <li><button className=\"dropdown-item\" onClick={() => setShowModal(\"actualizarNombreUsuario\")}>Actualizar nombre de usuario</button></li>\n//               <li><button className=\"dropdown-item\" onClick={() => setShowModal(\"restablecerContrasena\")}>Restablecer contraseña</button></li>\n//               <li><button className=\"dropdown-item\" onClick={cerrarSesion}>Cerrar sesión</button></li>\n//             </ul>\n//           </div>\n//         </nav>\n//       </header>\n//       <div className=\"welcome-section\">\n//         <h2 className=\"welcome-title\">PROPSUITE</h2>\n//         <p className=\"welcome-subtitle\">Bienvenidos a nuestro sistema, diseñado para hacer tu gestión fácil y dinámica.</p>\n//       </div>\n//       <div className=\"section-container\">\n//   <h2 className=\"section-title\">Reclamos</h2>\n//   <button className=\"section-button\" onClick={() => {\n//     setIdReclamo('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"obtenerReclamoPorId\");\n//   }}>Ver Reclamo por ID</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setCodigoEdificio('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"obtenerReclamosPorEdificio\");\n//   }}>Ver Reclamos por Edificio</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setCodigoEdificio('');\n//     setPiso('');\n//     setNumero('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"obtenerReclamosPorUnidad\");\n//   }}>Ver Reclamos por Unidad</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     obtenerMisReclamos();\n//   }}>Mis Reclamos</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setIdUnidad('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"verReclamosPorIdUnidad\");\n//   }}>Reclamos por ID Unidad</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setIdTipoReclamo('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"verReclamosPorTipo\");\n//   }}>Reclamos por Tipo</button>\n\n//   <button className=\"section-button\" onClick={() => {\n//     setEstado('');\n//     setModalContent(''); // Limpia el contenido previo del modal\n//     setShowModal(\"verReclamosPorEstado\");\n//   }}>Reclamos por Estado</button>\n\n// <button className=\"section-button\" onClick={() => {\n//       setModalContent(''); // Limpia el contenido previo\n//       setShowModal(\"verReclamosEnAreasComunes\");\n//     }}>Reclamos en Áreas Comunes</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setModalContent(\"\"); // Limpia el contenido previo\n//     setShowModal(\"filtrarReclamosPorFecha\");\n//   }}>Filtrar Reclamos por Fecha</button>\n\n// <button className=\"section-button\" onClick={() => {\n//   setCodigoEdificio('');\n//   setPiso('');\n//   setNumeroUnidad('');\n//   setUbicacion('');\n//   setDescripcion('');\n//   setTipoReclamo('');\n//   setModalContent('');\n//   setShowModal(\"agregarReclamoConUnidad\");\n// }}>Agregar Reclamo con Unidad</button>\n\n// <button className=\"section-button\" onClick={() => {\n//   setCodigoEdificio('');\n//   setUbicacion('');\n//   setDescripcion('');\n//   setTipoReclamo('');\n//   setModalContent('');\n//   setShowModal(\"agregarReclamoSinUnidad\");\n// }}>Agregar Reclamo sin Unidad</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setIdReclamo(\"\"); // Limpia el campo previo\n//     setUbicacion(\"\"); // Limpia el campo previo\n//     setDescripcion(\"\"); // Limpia el campo previo\n//     setModalContent(\"\"); // Limpia cualquier contenido previo\n//     setShowModal(\"actualizarReclamo\");\n//   }}>Actualizar Reclamo</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setArchivo(null);\n//     setIdReclamo(\"\");\n//     setTipo(\"\"); // Inicializa el tipo\n//     setShowModal(\"agregarImagen\");\n//     }}> Agregar Imagen</button> \n\n// <button className=\"section-button\" onClick={() => {\n//     setArchivo(null);\n//     setIdImagen(\"\");\n//     setTipo(\"\");\n//     setShowModal(\"actualizarImagen\");\n//   }}> Actualizar Imagen</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setIdImagen(\"\"); // Limpia el estado anterior\n//     setShowModal(\"eliminarImagen\");\n//   }}> Eliminar Imagen</button>\n\n// <button className=\"section-button\" onClick={() => {\n//     setIdImagen(\"\"); // Limpia el estado anterior\n//     setModalContent(\"\"); // Limpia el contenido previo\n//     setShowModal(\"verImagen\"); // Muestra el modal\n//   }}> Ver Imagen por ID</button>\n\n// <button className=\"section-button\"  onClick={() => {\n//     setIdReclamo(\"\"); // Limpia el estado del ID\n//     setModalContent([]); // Limpia el contenido previo\n//     setShowModal(\"verImagenesPorReclamo\"); // Abre el modal\n//   }}> Ver Imágenes de un Reclamo</button>\n\n\n// </div>\n//       <div className=\"section-container\">\n//         <h2 className=\"section-title\">Unidades</h2>\n//         <button\n//   className=\"section-button\"\n//   onClick={() => {\n//     setModalContent([]); // Limpia contenido previo\n//     obtenerUnidadesDondeSoyDuenio(); // Llama a la función para obtener unidades\n//     //setShowModal(\"unidadesDuenio\"); // Abre el modal para mostrar las unidades donde es dueño\n//   }}\n// >\n//   Ver Unidades Donde Soy Dueño\n// </button>\n\n// <button\n//   className=\"section-button\"\n//   onClick={() => {\n//     setModalContent([]); // Limpia contenido previo\n//     obtenerUnidadesDondeSoyInquilino(); // Llama a la función para obtener unidades\n//     //setShowModal(\"unidadesInquilino\"); // Abre el modal para mostrar las unidades donde es inquilino\n//   }}\n// >\n//   Ver Unidades Donde Soy Inquilino\n// </button>\n\n//       </div>\n        \n//       {/* Modales para usuario */}\n//       {showModal === \"actualizarNombreUsuario\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Actualizar Nombre de Usuario</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Nuevo nombre de usuario\"\n//               value={nuevoNombreUsuario}\n//               onChange={(e) => setNuevoNombreUsuario(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={actualizarNombreUsuario}>Guardar</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cancelar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n  \n//       {showModal === \"restablecerContrasena\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Restablecer Contraseña</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Nombre de usuario\"\n//               value={nombreUsuario}\n//               onChange={(e) => setNombreUsuario(e.target.value)}\n//             />\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Documento: Ejemplo: 'DNI45286575'\"\n//               value={dni}\n//               onChange={(e) => setDni(e.target.value)}\n//             />\n//             <input\n//               className=\"modal-input\"\n//               type=\"password\"\n//               placeholder=\"Nueva contraseña\"\n//               value={nuevaContrasena}\n//               onChange={(e) => setNuevaContrasena(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={restablecerContrasena}>Restablecer</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cancelar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n  \n//       {/* Modal para ver Reclamo por ID */}\n//       {showModal === \"obtenerReclamoPorId\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Ver Reclamo por ID</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"ID del Reclamo\"\n//               value={idReclamo}\n//               onChange={(e) => setIdReclamo(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={async () => {\n//                 const url = `http://localhost:8080/api/reclamos/${idReclamo}`;\n//                 const options = {\n//                   method: \"GET\",\n//                   headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${jwtToken}`,\n//                   },\n//                 };\n//                 const result = await handleApiCall(url, options);\n//                 if (result) {\n//                   const formatted = `\n//                     - ID Reclamo: ${result.numero}\n//                     - Documento de Reclamante: ${result.usuario?.documento || \"No disponible\"}\n//                     - Código de Edificio: ${result.edificio?.codigo || \"N/A\"}\n//                     - Ubicación: ${result.ubicacion}\n//                     - Identificador de Unidad: ${\n//                       result.unidad ? `ID: ${result.unidad.id}, Piso: ${result.unidad.piso}, Número: ${result.unidad.numero}` : \"N/A\"\n//                     }\n//                     - Descripción: ${result.descripcion}\n//                     - Estado: ${result.estado}\n//                     - Detalle Estado: ${result.detalleEstado}\n//                     - Fecha: ${result.fecha}`;\n//                   setModalContent(formatted);\n//                   setShowModal(\"verMisReclamos\");\n//                 }\n//               }}>Buscar</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n  \n//       {/* Modal para ver Reclamos por Edificio */}\n//       {showModal === \"obtenerReclamosPorEdificio\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Ver Reclamos por Edificio</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Código del Edificio\"\n//               value={codigoEdificio}\n//               onChange={(e) => setCodigoEdificio(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={async () => {\n//                 const url = `http://localhost:8080/api/reclamos/edificio/${codigoEdificio}`;\n//                 const options = {\n//                   method: \"GET\",\n//                   headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${jwtToken}`,\n//                   },\n//                 };\n//                 const result = await handleApiCall(url, options);\n//                 if (result) {\n//                   const formatted = result.map((reclamo, index) => `\n//                     Reclamo ${index + 1}:\n//                     - ID Reclamo: ${reclamo.numero}\n//                     - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//                     - Ubicación: ${reclamo.ubicacion}\n//                     - Descripción: ${reclamo.descripcion}\n//                     - Estado: ${reclamo.estado}\n//                     - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//                   setModalContent(formatted);\n//                   setShowModal(\"verMisReclamos\");\n//                 }\n//               }}>Buscar</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       {showModal === \"agregarReclamoConUnidad\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Agregar Reclamo con Unidad</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"Código del Edificio\"\n//         value={codigoEdificio}\n//         onChange={(e) => setCodigoEdificio(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Piso\"\n//         value={piso}\n//         onChange={(e) => setPiso(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Número de Unidad\"\n//         value={numeroUnidad}\n//         onChange={(e) => setNumeroUnidad(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ubicación\"\n//         value={ubicacion}\n//         onChange={(e) => setUbicacion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Descripción\"\n//         value={descripcion}\n//         onChange={(e) => setDescripcion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"Tipo de Reclamo\"\n//         value={tipoReclamo}\n//         onChange={(e) => setTipoReclamo(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={agregarReclamoConUnidad}>Agregar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"agregarReclamoSinUnidad\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Agregar Reclamo sin Unidad</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"Código del Edificio\"\n//         value={codigoEdificio}\n//         onChange={(e) => setCodigoEdificio(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ubicación\"\n//         value={ubicacion}\n//         onChange={(e) => setUbicacion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Descripción\"\n//         value={descripcion}\n//         onChange={(e) => setDescripcion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"Tipo de Reclamo\"\n//         value={tipoReclamo}\n//         onChange={(e) => setTipoReclamo(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={agregarReclamoSinUnidad}>Agregar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n//       {/* Modal para ver Reclamos por Unidad */}\n//       {showModal === \"obtenerReclamosPorUnidad\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Ver Reclamos por Unidad</h2>\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Código del Edificio\"\n//               value={codigoEdificio}\n//               onChange={(e) => setCodigoEdificio(e.target.value)}\n//             />\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Piso\"\n//               value={piso}\n//               onChange={(e) => setPiso(e.target.value)}\n//             />\n//             <input\n//               className=\"modal-input\"\n//               type=\"text\"\n//               placeholder=\"Número\"\n//               value={numero}\n//               onChange={(e) => setNumero(e.target.value)}\n//             />\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={async () => {\n//                 const url = `http://localhost:8080/api/reclamos/unidad/${codigoEdificio}/${piso}/${numero}`;\n//                 const options = {\n//                   method: \"GET\",\n//                   headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${jwtToken}`,\n//                   },\n//                 };\n//                 const result = await handleApiCall(url, options);\n//                 if (result) {\n//                   const formatted = result.map((reclamo, index) => `\n//                     Reclamo ${index + 1}:\n//                     - ID Reclamo: ${reclamo.numero}\n//                     - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//                     - Ubicación: ${reclamo.ubicacion}\n//                     - Descripción: ${reclamo.descripcion}\n//                     - Estado: ${reclamo.estado}\n//                     - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//                   setModalContent(formatted);\n//                   setShowModal(\"verMisReclamos\");\n//                 }\n//               }}>Buscar</button>\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       {/* Modal para ver Reclamos por ID Unidad */}\n// {showModal === \"verReclamosPorIdUnidad\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Reclamos por ID Unidad</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ingrese el ID de la Unidad\"\n//         value={idUnidad}\n//         onChange={(e) => setIdUnidad(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={async () => {\n//           const url = `http://localhost:8080/api/reclamos/unidad/${idUnidad}`;\n//           const options = {\n//             method: \"GET\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Bearer ${jwtToken}`,\n//             },\n//           };\n//           const result = await handleApiCall(url, options);\n//           if (result) {\n//             const formatted = result.map((reclamo, index) => `\n//               Reclamo ${index + 1}:\n//               - ID Reclamo: ${reclamo.numero}\n//               - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//               - Ubicación: ${reclamo.ubicacion}\n//               - Identificador de Unidad: ${reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : \"N/A\"}\n//               - Descripción: ${reclamo.descripcion}\n//               - Estado: ${reclamo.estado}\n//               - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//             setModalContent(formatted);\n//             setShowModal(\"verMisReclamos\");\n//           }\n//         }}>Buscar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {/* Modal para ver Reclamos por Tipo */}\n// {showModal === \"verReclamosPorTipo\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Reclamos por Tipo</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ingrese el ID del Tipo de Reclamo\"\n//         value={idTipoReclamo}\n//         onChange={(e) => setIdTipoReclamo(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={async () => {\n//           const url = `http://localhost:8080/api/reclamos/tipo/${idTipoReclamo}`;\n//           const options = {\n//             method: \"GET\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Bearer ${jwtToken}`,\n//             },\n//           };\n//           const result = await handleApiCall(url, options);\n//           if (result) {\n//             const formatted = result.map((reclamo, index) => `\n//               Reclamo ${index + 1}:\n//               - ID Reclamo: ${reclamo.numero}\n//               - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//               - Tipo de Reclamo: ${idTipoReclamo}\n//               - Ubicación: ${reclamo.ubicacion}\n//               - Descripción: ${reclamo.descripcion}\n//               - Estado: ${reclamo.estado}\n//               - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//             setModalContent(formatted);\n//             setShowModal(\"verMisReclamos\");\n//           }\n//         }}>Buscar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {/* Modal para ver Reclamos por Estado */}\n// {showModal === \"verReclamosPorEstado\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Reclamos por Estado</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Ingrese el Estado del Reclamo\"\n//         value={estado}\n//         onChange={(e) => setEstado(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={async () => {\n//           const url = `http://localhost:8080/api/reclamos/estado/${estado}`;\n//           const options = {\n//             method: \"GET\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Bearer ${jwtToken}`,\n//             },\n//           };\n//           const result = await handleApiCall(url, options);\n//           if (result) {\n//             const formatted = result.map((reclamo, index) => `\n//               Reclamo ${index + 1}:\n//               - ID Reclamo: ${reclamo.numero}\n//               - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//               - Estado: ${estado}\n//               - Ubicación: ${reclamo.ubicacion}\n//               - Identificador de Unidad: ${reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : \"N/A\"}\n//               - Descripción: ${reclamo.descripcion}\n//               - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//             setModalContent(formatted);\n//             setShowModal(\"verMisReclamos\");\n//           }\n//         }}>Buscar</button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n// {showModal === \"verReclamosEnAreasComunes\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Reclamos en Áreas Comunes</h2>\n//       <div className=\"modal-buttons\">\n//         <button\n//           className=\"section-button\"\n//           onClick={async () => {\n//             const url = \"http://localhost:8080/api/reclamos/areas-comunes\";\n//             const options = {\n//               method: \"GET\",\n//               headers: {\n//                 \"Content-Type\": \"application/json\",\n//                 Authorization: `Bearer ${jwtToken}`,\n//               },\n//             };\n//             const result = await handleApiCall(url, options);\n//             if (result) {\n//               const formatted = result.map((reclamo, index) => `\n//                 Reclamo ${index + 1}:\n//                 - ID Reclamo: ${reclamo.numero}\n//                 - Documento de Reclamante: ${reclamo.usuario?.documento || \"No disponible\"}\n//                 - Ubicación: ${reclamo.ubicacion}\n//                 - Identificador de Unidad: ${reclamo.unidad ? `Piso: ${reclamo.unidad.piso}, Número: ${reclamo.unidad.numero}` : \"N/A\"}\n//                 - Descripción: ${reclamo.descripcion}\n//                 - Estado: ${reclamo.estado}\n//                 - Fecha: ${reclamo.fecha}`).join(\"\\n\");\n//               setModalContent(formatted);\n//               setShowModal(\"verMisReclamos\");\n//             }\n//           }}\n//         >\n//           Buscar\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"filtrarReclamosPorFecha\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Filtrar Reclamos por Fecha</h2>\n//       <p>Seleccione cómo desea ordenar los reclamos:</p>\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={() => filtrarReclamosPorFecha(true)}>\n//           Más Recientes Primero\n//         </button>\n//         <button className=\"section-button\" onClick={() => filtrarReclamosPorFecha(false)}>\n//           Más Antiguos Primero\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n\n\n// {showModal === \"actualizarReclamo\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Actualizar Reclamo</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"number\"\n//         placeholder=\"ID del Reclamo\"\n//         value={idReclamo}\n//         onChange={(e) => setIdReclamo(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Nueva Ubicación\"\n//         value={ubicacion}\n//         onChange={(e) => setUbicacion(e.target.value)}\n//       />\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"Descripción Actualizada\"\n//         value={descripcion}\n//         onChange={(e) => setDescripcion(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={actualizarReclamo}>\n//           Actualizar\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//           Cancelar\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"agregarImagen\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Agregar Imagen</h2>\n//       <label className=\"modal-label\">Seleccione una imagen:</label>\n//       <input\n//         type=\"file\"\n//         accept=\"image/*\" // Solo permitir imágenes\n//         onChange={(e) => setArchivo(e.target.files[0])} // Guardar archivo seleccionado\n//       />\n//       <label className=\"modal-label\">ID del Reclamo:</label>\n//       <input\n//         type=\"number\"\n//         placeholder=\"Ingrese el ID del reclamo\"\n//         value={idReclamo}\n//         onChange={(e) => setIdReclamo(e.target.value)} // Guardar ID del reclamo\n//       />\n//       <label className=\"modal-label\">Tipo de Imagen (jpg, png, etc.):</label>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Ingrese el tipo de imagen\"\n//         value={tipo}\n//         onChange={(e) => setTipo(e.target.value)} // Guardar tipo de archivo\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={agregarImagen}>\n//           Subir Imagen\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//           Cancelar\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"actualizarImagen\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Actualizar Imagen</h2>\n//       <label className=\"modal-label\">ID de la Imagen:</label>\n//       <input\n//         type=\"number\"\n//         placeholder=\"Ingrese el ID de la imagen\"\n//         value={idImagen}\n//         onChange={(e) => setIdImagen(e.target.value)}\n//       />\n//       <label className=\"modal-label\">Seleccione un nuevo archivo:</label>\n//       <input\n//         type=\"file\"\n//         accept=\"image/*\"\n//         onChange={(e) => setArchivo(e.target.files[0])}\n//       />\n//       <label className=\"modal-label\">Tipo de Archivo:</label>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Ejemplo: jpg, jpeg, png\"\n//         value={tipo}\n//         onChange={(e) => setTipo(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={actualizarImagen}>\n//           Actualizar Imagen\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//           Cancelar\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"eliminarImagen\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Eliminar Imagen</h2>\n//       <input\n//         className=\"modal-input\"\n//         type=\"text\"\n//         placeholder=\"ID de la Imagen\"\n//         value={idImagen}\n//         onChange={(e) => setIdImagen(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button className=\"section-button\" onClick={eliminarImagen}>\n//           Eliminar\n//         </button>\n//         <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//           Cerrar\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"verImagen\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Ver Imagen</h2>\n//       {!modalContent ? (\n//         <>\n//           <input\n//             className=\"modal-input\"\n//             type=\"text\"\n//             placeholder=\"ID de la Imagen\"\n//             value={idImagen}\n//             onChange={(e) => setIdImagen(e.target.value)}\n//           />\n//           <div className=\"modal-buttons\">\n//             <button className=\"section-button\" onClick={verImagen}>\n//               Ver Imagen\n//             </button>\n//             <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//               Cerrar\n//             </button>\n//           </div>\n//         </>\n//       ) : (\n//         <>\n//           <img\n//             src={modalContent}\n//             alt=\"Vista previa\"\n//             className=\"image-preview\"\n//             style={{ maxWidth: \"100%\", maxHeight: \"400px\" }}\n//           />\n//           <div className=\"modal-buttons\">\n//             <button className=\"section-button\" onClick={() => setModalContent(\"\")}>\n//               Ver Otra Imagen\n//             </button>\n//             <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//               Cerrar\n//             </button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   </div>\n// )}\n\n// {showModal === \"verImagenesPorReclamo\" && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content custom-modal\">\n//       <h2 className=\"modal-title\">Imágenes del Reclamo</h2>\n//       {!modalContent || modalContent.length === 0 ? (\n//         <>\n//           <input\n//             className=\"modal-input\"\n//             type=\"text\"\n//             placeholder=\"ID del Reclamo\"\n//             value={idReclamo}\n//             onChange={(e) => setIdReclamo(e.target.value)}\n//           />\n//           <div className=\"modal-buttons\">\n//             <button className=\"section-button\" onClick={() => verImagenesPorReclamo(idReclamo)}>\n//               Ver Imágenes\n//             </button>\n//             <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//               Cerrar\n//             </button>\n//           </div>\n//         </>\n//       ) : (\n//         <div className=\"image-gallery\">\n//           {modalContent.map((imagen, index) => (\n//             <img\n//               key={index}\n//               src={imagen.contenido}\n//               alt={`Imagen ${index + 1}`}\n//               className=\"image-preview\"\n//               style={{ maxWidth: \"100%\", maxHeight: \"200px\", margin: \"10px\" }}\n//             />\n//           ))}\n//           <div className=\"modal-buttons\">\n//             <button className=\"section-button\" onClick={() => setModalContent([])}>\n//               Ver Otro Reclamo\n//             </button>\n//             <button className=\"section-button\" onClick={() => setShowModal(null)}>\n//               Cerrar\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   </div>\n// )}\n\n// {/* modal para unidades*/}\n// {showModal === \"misUnidadesDuenio\" && (\n//   <Modal onClose={() => setShowModal(\"\")}>\n//     <h2>Mis Unidades (Dueño)</h2>\n//     <ul>\n//       {modalContent.map((unidad, index) => (\n//         <li key={index}>\n//           Piso: {unidad.piso}, Número: {unidad.numero}, Habitado:{\" \"}\n//           {unidad.habitado ? \"Sí\" : \"No\"}\n//         </li>\n//       ))}\n//     </ul>\n//   </Modal>\n// )}\n\n// {showModal === \"misUnidadesInquilino\" && (\n//   <Modal onClose={() => setShowModal(\"\")}>\n//     <h2>Mis Unidades (Inquilino)</h2>\n//     <ul>\n//       {modalContent.map((unidad, index) => (\n//         <li key={index}>\n//           Piso: {unidad.piso}, Número: {unidad.numero}, Habitado:{\" \"}\n//           {unidad.habitado ? \"Sí\" : \"No\"}\n//         </li>\n//       ))}\n//     </ul>\n//   </Modal>\n// )}\n\n\n\n// {/* Modal para mostrar los resultados */}\n//       {showModal === \"verMisReclamos\" && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content custom-modal\">\n//             <h2 className=\"modal-title\">Resultado de Reclamos</h2>\n//             <pre>{modalContent || \"No hay reclamos disponibles.\"}</pre>\n//             <div className=\"modal-buttons\">\n//               <button className=\"section-button\" onClick={() => setShowModal(null)}>Cerrar</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }  \n  \n// export default UsuarioDashboard;\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}