{"ast":null,"code":"var _jsxFileName = \"/Users/marcospirchio/IdeaProjects/TpApis/AdministracionEdificiosTpApis/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showLogin, setShowLogin] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          nombreUsuario: username,\n          contrasena: password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem(\"jwtToken\", data.token);\n        const decodedToken = jwtDecode(data.token);\n        const userRole = decodedToken.role;\n\n        // Redirigir basado en el rol\n        setMessage(\"Inicio de sesión exitoso. Redirigiendo...\");\n        if (userRole === \"ADMIN\") {\n          navigate(\"/admin-dashboard\");\n        } else if (userRole === \"USER\") {\n          navigate(\"/user-dashboard\");\n        }\n      } else {\n        setMessage(\"Error al iniciar sesión. Verifique sus credenciales.\");\n      }\n    } catch (error) {\n      setMessage(\"No se pudo conectar al servidor.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: showLogin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Usuario\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Ingresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowLogin(false),\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowLogin(true),\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ICXf5p6tbLFXbFgx5Bj+HrbENJg=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useNavigate","jwtDecode","jsxDEV","_jsxDEV","App","_s","showLogin","setShowLogin","username","setUsername","password","setPassword","message","setMessage","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","nombreUsuario","contrasena","ok","data","json","localStorage","setItem","token","decodedToken","userRole","role","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/marcospirchio/IdeaProjects/TpApis/AdministracionEdificiosTpApis/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nfunction App() {\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          nombreUsuario: username,\r\n          contrasena: password,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem(\"jwtToken\", data.token);\r\n\r\n        const decodedToken = jwtDecode(data.token);\r\n        const userRole = decodedToken.role;\r\n\r\n        // Redirigir basado en el rol\r\n        setMessage(\"Inicio de sesión exitoso. Redirigiendo...\");\r\n        if (userRole === \"ADMIN\") {\r\n          navigate(\"/admin-dashboard\");\r\n        } else if (userRole === \"USER\") {\r\n          navigate(\"/user-dashboard\");\r\n        }\r\n      } else {\r\n        setMessage(\"Error al iniciar sesión. Verifique sus credenciales.\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"No se pudo conectar al servidor.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {showLogin ? (\r\n        <div>\r\n          <h2>Iniciar Sesión</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Usuario\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Contraseña\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button onClick={handleLogin}>Ingresar</button>\r\n          <button onClick={() => setShowLogin(false)}>Volver</button>\r\n          {message && <p>{message}</p>}\r\n        </div>\r\n      ) : (\r\n        <button onClick={() => setShowLogin(true)}>Iniciar Sesión</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}