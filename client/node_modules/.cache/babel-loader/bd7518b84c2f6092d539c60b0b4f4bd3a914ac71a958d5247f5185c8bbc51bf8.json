{"ast":null,"code":"var _jsxFileName = \"/Users/marcospirchio/IdeaProjects/TpApis/AdministracionEdificiosTpApis/client/src/components/UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./UserDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsuarioDashboard() {\n  _s();\n  const [showModal, setShowModal] = useState(null);\n  const [modalContent, setModalContent] = useState(\"\");\n  const [nuevoNombreUsuario, setNuevoNombreUsuario] = useState(\"\");\n  const [nombreUsuario, setNombreUsuario] = useState(\"\");\n  const [dni, setDni] = useState(\"\");\n  const [nuevaContrasena, setNuevaContrasena] = useState(\"\");\n  const [idReclamo, setIdReclamo] = useState(\"\");\n  const [codigoEdificio, setCodigoEdificio] = useState(\"\");\n  const [piso, setPiso] = useState(\"\");\n  const [numero, setNumero] = useState(\"\");\n  const [filtroActivo, setFiltroActivo] = useState(\"\"); // Almacena el tipo de filtro activo\n\n  const jwtToken = localStorage.getItem(\"jwtToken\");\n  const handleApiCall = async (url, options) => {\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error desconocido');\n      }\n      return data;\n    } catch (error) {\n      console.error('Error en la solicitud:', error);\n      alert(`Error: ${error.message}`);\n      return null;\n    }\n  };\n\n  // Las funciones individuales para actualizar usuario, restablecer contraseña, y cerrar sesión se mantienen sin cambios\n\n  const obtenerMisReclamos = async () => {\n    let url = \"http://localhost:8080/api/reclamos/mis-reclamos\";\n    switch (filtroActivo) {\n      case \"id\":\n        url = `http://localhost:8080/api/reclamos/${idReclamo}`;\n        break;\n      case \"edificio\":\n        url = `http://localhost:8080/api/reclamos/edificio/${codigoEdificio}`;\n        break;\n      case \"unidad\":\n        url = `http://localhost:8080/api/reclamos/unidad/${codigoEdificio}/${piso}/${numero}`;\n        break;\n      default:\n        break;\n    }\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${jwtToken}`\n      }\n    };\n    const result = await handleApiCall(url, options);\n    if (result) {\n      const formatted = Array.isArray(result) ? result.map((reclamo, index) => `Reclamo ${index + 1}:\n        - ID Reclamo: ${reclamo.id}\n        - Documento de Reclamante: ${reclamo.documento || 'No disponible'}\n        - Código de Edificio: ${reclamo.codigoEdificio}\n        - Ubicación: ${reclamo.ubicacion}\n        - Identificador de Unidad: ${reclamo.identificadorUnidad || 'N/A'}\n        - Descripción: ${reclamo.descripcion}\n        - ID Tipo Reclamo: ${reclamo.idTipoReclamo}\n        - Estado: ${reclamo.estado}\n        - Detalle Estado: ${reclamo.detalleEstado}\n        - Fecha: ${reclamo.fecha}\\n`).join(\"\\n\") : `Reclamo encontrado: ${JSON.stringify(result)}`;\n      setModalContent(formatted);\n      setShowModal(\"verMisReclamos\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-button\",\n        onClick: () => setFiltroActivo(\"id\"),\n        children: \"Filtrar por ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-button\",\n        onClick: () => setFiltroActivo(\"edificio\"),\n        children: \"Filtrar por Edificio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-button\",\n        onClick: () => setFiltroActivo(\"unidad\"),\n        children: \"Filtrar por Unidad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-button\",\n        onClick: () => setFiltroActivo(\"\"),\n        children: \"Quitar Filtros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"section-button\",\n      onClick: obtenerMisReclamos,\n      children: \"Mostrar Mis Reclamos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(UsuarioDashboard, \"2mntCaIDrxaAZMu0UCfQqCBlkMM=\");\n_c = UsuarioDashboard;\nexport default UsuarioDashboard;\nvar _c;\n$RefreshReg$(_c, \"UsuarioDashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UsuarioDashboard","_s","showModal","setShowModal","modalContent","setModalContent","nuevoNombreUsuario","setNuevoNombreUsuario","nombreUsuario","setNombreUsuario","dni","setDni","nuevaContrasena","setNuevaContrasena","idReclamo","setIdReclamo","codigoEdificio","setCodigoEdificio","piso","setPiso","numero","setNumero","filtroActivo","setFiltroActivo","jwtToken","localStorage","getItem","handleApiCall","url","options","response","fetch","data","json","ok","Error","message","error","console","alert","obtenerMisReclamos","method","headers","Authorization","result","formatted","Array","isArray","map","reclamo","index","id","documento","ubicacion","identificadorUnidad","descripcion","idTipoReclamo","estado","detalleEstado","fecha","join","JSON","stringify","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marcospirchio/IdeaProjects/TpApis/AdministracionEdificiosTpApis/client/src/components/UserDashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./UserDashboard.css\";\n\nfunction UsuarioDashboard() {\n  const [showModal, setShowModal] = useState(null);\n  const [modalContent, setModalContent] = useState(\"\");\n  const [nuevoNombreUsuario, setNuevoNombreUsuario] = useState(\"\");\n  const [nombreUsuario, setNombreUsuario] = useState(\"\");\n  const [dni, setDni] = useState(\"\");\n  const [nuevaContrasena, setNuevaContrasena] = useState(\"\");\n  const [idReclamo, setIdReclamo] = useState(\"\");\n  const [codigoEdificio, setCodigoEdificio] = useState(\"\");\n  const [piso, setPiso] = useState(\"\");\n  const [numero, setNumero] = useState(\"\");\n  const [filtroActivo, setFiltroActivo] = useState(\"\"); // Almacena el tipo de filtro activo\n\n  const jwtToken = localStorage.getItem(\"jwtToken\");\n\n  const handleApiCall = async (url, options) => {\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Error desconocido');\n      }\n      return data;\n    } catch (error) {\n      console.error('Error en la solicitud:', error);\n      alert(`Error: ${error.message}`);\n      return null;\n    }\n  };\n\n  // Las funciones individuales para actualizar usuario, restablecer contraseña, y cerrar sesión se mantienen sin cambios\n\n  const obtenerMisReclamos = async () => {\n    let url = \"http://localhost:8080/api/reclamos/mis-reclamos\";\n    switch (filtroActivo) {\n      case \"id\":\n        url = `http://localhost:8080/api/reclamos/${idReclamo}`;\n        break;\n      case \"edificio\":\n        url = `http://localhost:8080/api/reclamos/edificio/${codigoEdificio}`;\n        break;\n      case \"unidad\":\n        url = `http://localhost:8080/api/reclamos/unidad/${codigoEdificio}/${piso}/${numero}`;\n        break;\n      default:\n        break;\n    }\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    };\n    const result = await handleApiCall(url, options);\n    if (result) {\n      const formatted = Array.isArray(result) ? result.map((reclamo, index) => (\n        `Reclamo ${index + 1}:\n        - ID Reclamo: ${reclamo.id}\n        - Documento de Reclamante: ${reclamo.documento || 'No disponible'}\n        - Código de Edificio: ${reclamo.codigoEdificio}\n        - Ubicación: ${reclamo.ubicacion}\n        - Identificador de Unidad: ${reclamo.identificadorUnidad || 'N/A'}\n        - Descripción: ${reclamo.descripcion}\n        - ID Tipo Reclamo: ${reclamo.idTipoReclamo}\n        - Estado: ${reclamo.estado}\n        - Detalle Estado: ${reclamo.detalleEstado}\n        - Fecha: ${reclamo.fecha}\\n`\n      )).join(\"\\n\") : `Reclamo encontrado: ${JSON.stringify(result)}`;\n      setModalContent(formatted);\n      setShowModal(\"verMisReclamos\");\n    }\n  };\n\n  return (\n    <div className=\"user-dashboard\">\n      {/* Código existente para el encabezado y secciones de bienvenida se mantiene */}\n\n      {/* Sección de botones de filtro */}\n      <div className=\"filters\">\n        <button className=\"filter-button\" onClick={() => setFiltroActivo(\"id\")}>Filtrar por ID</button>\n        <button className=\"filter-button\" onClick={() => setFiltroActivo(\"edificio\")}>Filtrar por Edificio</button>\n        <button className=\"filter-button\" onClick={() => setFiltroActivo(\"unidad\")}>Filtrar por Unidad</button>\n        <button className=\"filter-button\" onClick={() => setFiltroActivo(\"\")}>Quitar Filtros</button>\n      </div>\n\n      {/* Botón para activar la visualización de los reclamos filtrados */}\n      <button className=\"section-button\" onClick={obtenerMisReclamos}>Mostrar Mis Reclamos</button>\n\n      {/* Código existente para modales y otras interfaces se mantiene */}\n    </div>\n  );\n}\n\nexport default UsuarioDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}